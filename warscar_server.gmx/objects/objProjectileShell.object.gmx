<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprProjectileShell</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-11</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scrConstants()

alarm[0] = BULLET_RANGE_BASE * room_speed // this alarm sets the range of the projectile
speed = BULLET_SPEED_BASE
state = NORMAL
my_damage = 10
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// end of projectile range
state = DYING
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch state
{
    case NORMAL:
    {
        // process hitting obstacles
        obstacle_id = collision_line(x, y, x+lengthdir_x(speed, direction), y+lengthdir_y(speed, direction), objParentObstacle, true, true)
        if obstacle_id &gt; 0 // something hit
        {
            // process passibility
            if not obstacle_id.passible then
            {
                state = DYING // destroy bullet
            }
            // process destructibility
            if obstacle_id.destructible then
            {
               obstacle_id.image_index += 1
                if obstacle_id.image_index = obstacle_id.image_number
                {
                    with (obstacle_id)
                    {
                      instance_destroy()
                    }
                }
            }
        }
        // process hitting other player
        switch global.game_type
        {
            case VERSUS:
            {
                var other_player
                if my_player = PLAYER1 then other_player = objPlayer2 else other_player = objPlayer1
                victim_id = collision_line(x, y, x+lengthdir_x(speed, direction), y+lengthdir_y(speed, direction), other_player, true, true)
                if victim_id &gt; 0
                {
                    victim_id.my_health -= my_damage
                    state = DYING // destroy bullet
                }
                break ;
            }
            case CAPTURE_THE_FLAG:
            {
                var other_player
                if my_player = PLAYER1 then other_player = objPlayer2 else other_player = objPlayer1
                victim_id = collision_line(x, y, x+lengthdir_x(speed, direction), y+lengthdir_y(speed, direction), other_player, true, true)
                if victim_id &gt; 0
                {
                    victim_id.my_health -= 50
                    state = DYING // destroy bullet
                }
                break ;
            }
        }
        // only count if in Versus game type
        if global.game_type = VERSUS
        {
            var other_player
            if my_player = PLAYER1 then other_player = objPlayer2 else other_player = objPlayer1
            victim_id = collision_line(x, y, x+lengthdir_x(speed, direction), y+lengthdir_y(speed, direction), other_player, true, true)
            if victim_id &gt; 0
            {
                victim_id.my_health -= my_damage
                state = DYING // destroy bullet
            }
        }
        break ;
    }
    case DYING:
    {
        effect_create_above(ef_explosion, x, y, 0, c_gray)
        instance_destroy()
        break ;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>64,64</point>
    <point>64,64</point>
  </PhysicsShapePoints>
</object>
